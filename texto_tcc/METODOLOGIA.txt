3. METODOLOGIA

Este capítulo descreve a metodologia empregada para o planejamento e a execução do projeto, detalhando a abordagem de desenvolvimento, as ferramentas tecnológicas utilizadas e as etapas sequenciais que guiaram a implementação do software desde a concepção até a sua finalização.

3.1. Abordagem de Desenvolvimento

O projeto seguiu uma abordagem de desenvolvimento incremental, que consiste em dividir o trabalho em fases com objetivos claros e entregas de funcionalidades específicas. Essa metodologia foi escolhida por permitir um desenvolvimento estruturado, com validação contínua do progresso em relação aos requisitos previamente definidos. O ciclo de vida do projeto foi dividido em etapas, começando com as funcionalidades base do sistema, como a autenticação de usuários, e evoluindo incrementalmente para funcionalidades mais complexas, como o compartilhamento de listas e a análise de gastos.

O planejamento e a execução de cada etapa seguiram um cronograma predefinido, conforme detalhado na Tabela 1, que serviu como um guia para o gerenciamento do tempo e dos recursos ao longo do desenvolvimento.

**Tabela 1: Cronograma de Desenvolvimento das Funcionalidades**
| Requisito / Tarefa                                   | Data Início | Data Fim   |
| ---------------------------------------------------- | ----------- | ---------- |
| Cadastro e autenticação de usuários                  | 01/09/2025  | 03/09/2025 |
| Gerenciar listas de compras (criar, editar, excluir) | 04/09/2025  | 08/09/2025 |
| Adicionar itens às listas (nome, quantidade, valor)  | 09/09/2025  | 11/09/2025 |
| Editar e remover itens já cadastrados                | 12/09/2025  | 13/09/2025 |
| Finalizar lista e salvar no histórico                | 14/09/2025  | 15/09/2025 |
| Consultar histórico de compras                       | 16/09/2025  | 17/09/2025 |
| Visualizar análise de gastos                         | 18/09/2025  | 19/09/2025 |
| Sugestão de produtos                                 | 20/09/2025  | 21/09/2025 |
| Testes finais e ajustes                              | 22/09/2025  | 30/09/2025 |
*(Fonte: O autor, 2025)*

3.2. Ferramentas e Ambiente de Desenvolvimento

Para a construção do aplicativo, foi utilizado um conjunto de tecnologias modernas e consolidadas no mercado de desenvolvimento de software, compondo o seguinte ambiente de desenvolvimento:

- **Linguagem de Programação:** Dart (versão 3.x), uma linguagem de programação otimizada para clientes, desenvolvida pela Google, que é a base para o framework Flutter.

- **Framework de UI:** Flutter (versão 3.x), o framework da Google para construção de interfaces de usuário compiladas nativamente para múltiplas plataformas a partir de uma única base de código.

- **Plataforma de Backend (BaaS):** Google Firebase, que proveu os serviços essenciais de back-end para a aplicação.

- **Banco de Dados:** Cloud Firestore, o banco de dados NoSQL em nuvem do Firebase, utilizado para a persistência de todos os dados da aplicação.

- **Serviço de Autenticação:** Firebase Authentication, utilizado para gerenciar de forma segura todo o ciclo de vida de autenticação dos usuários.

- **Serviço de Armazenamento de Arquivos:** Firebase Storage, utilizado para o armazenamento de arquivos binários, como as imagens dos produtos.

- **Gerenciamento de Estado e Dependências:** Biblioteca GetX, uma solução completa para gerenciamento de estado, injeção de dependências e roteamento no ecossistema Flutter.

- **Ambiente de Desenvolvimento Integrado (IDE):** Visual Studio Code, um editor de código leve e poderoso, com extensões que otimizam o desenvolvimento em Dart e Flutter.

- **Sistema de Controle de Versão:** Git, o sistema de controle de versão distribuído mais utilizado no mundo, com o repositório do projeto hospedado na plataforma GitHub para gerenciamento e colaboração.